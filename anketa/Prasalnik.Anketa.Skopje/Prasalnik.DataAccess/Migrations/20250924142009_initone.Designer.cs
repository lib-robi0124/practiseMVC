// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prasalnik.DataAccess.DataContext;

#nullable disable

namespace Prasalnik.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250924142009_initone")]
    partial class initone
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Prasalnik.Domain.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionnaireId")
                        .HasColumnType("int");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("QuestionnaireId");

                    b.HasIndex("UserId");

                    b.ToTable("Answers", (string)null);
                });

            modelBuilder.Entity("Prasalnik.Domain.Models.QuestionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("QuestionnaireId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionnaireId");

                    b.ToTable("QuestionItems", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            QuestionText = "How satisfied are you with our service?",
                            QuestionnaireId = 1,
                            Type = 3
                        },
                        new
                        {
                            Id = 2,
                            QuestionText = "Would you recommend us to others?",
                            QuestionnaireId = 1,
                            Type = 2
                        },
                        new
                        {
                            Id = 3,
                            QuestionText = "What can we improve?",
                            QuestionnaireId = 2,
                            Type = 1
                        },
                        new
                        {
                            Id = 4,
                            QuestionText = "How do you rate the work environment?",
                            QuestionnaireId = 2,
                            Type = 3
                        });
                });

            modelBuilder.Entity("Prasalnik.Domain.Models.Questionnaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Questionnaires", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = "Answered",
                            Title = "Customer Satisfaction Survey"
                        },
                        new
                        {
                            Id = 2,
                            Status = "Skipped",
                            Title = "Employee Feedback Form"
                        });
                });

            modelBuilder.Entity("Prasalnik.Domain.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Statuses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Answered"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Skipped"
                        });
                });

            modelBuilder.Entity("Prasalnik.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("OU")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 12345,
                            FullName = "Alice Johnson",
                            OU = "HR",
                            Role = 1
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 12345,
                            FullName = "Bob Smith",
                            OU = "IT",
                            Role = 2
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 12345,
                            FullName = "Charlie Brown",
                            OU = "Finance",
                            Role = 3
                        });
                });

            modelBuilder.Entity("Prasalnik.Domain.Models.Answer", b =>
                {
                    b.HasOne("Prasalnik.Domain.Models.QuestionItem", null)
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Answer_QuestionItem");

                    b.HasOne("Prasalnik.Domain.Models.Questionnaire", null)
                        .WithMany()
                        .HasForeignKey("QuestionnaireId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Answer_Questionnaire");

                    b.HasOne("Prasalnik.Domain.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Answer_User");
                });

            modelBuilder.Entity("Prasalnik.Domain.Models.QuestionItem", b =>
                {
                    b.HasOne("Prasalnik.Domain.Models.Questionnaire", null)
                        .WithMany("QuestionItems")
                        .HasForeignKey("QuestionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_QuestionItem_Questionnaire");
                });

            modelBuilder.Entity("Prasalnik.Domain.Models.Questionnaire", b =>
                {
                    b.Navigation("QuestionItems");
                });
#pragma warning restore 612, 618
        }
    }
}
