// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoMovieRent.DataAccess;

#nullable disable

namespace VideoMovieRent.DataAccess.Migrations
{
    [DbContext(typeof(VideoMovieRentDbContext))]
    partial class VideoMovieRentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VideoMovieRent.Domain.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "12233445",
                            Username = "peroperov"
                        },
                        new
                        {
                            Id = 2,
                            Password = "admin123",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("VideoMovieRent.Domain.Cast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Part")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Casts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MovieId = 1,
                            Name = "Ken Watanabe",
                            Part = 1
                        },
                        new
                        {
                            Id = 2,
                            MovieId = 2,
                            Name = "Park Chan-wook",
                            Part = 2
                        },
                        new
                        {
                            Id = 3,
                            MovieId = 2,
                            Name = "Lee Byung-hun",
                            Part = 1
                        },
                        new
                        {
                            Id = 4,
                            MovieId = 3,
                            Name = "Michael B. Jordan",
                            Part = 3
                        },
                        new
                        {
                            Id = 5,
                            MovieId = 4,
                            Name = "Marion Cotillard",
                            Part = 1
                        },
                        new
                        {
                            Id = 6,
                            MovieId = 7,
                            Name = "Tom Hardy",
                            Part = 1
                        },
                        new
                        {
                            Id = 7,
                            MovieId = 8,
                            Name = "Jessica Chastain",
                            Part = 2
                        },
                        new
                        {
                            Id = 8,
                            MovieId = 9,
                            Name = "Donnie Yen",
                            Part = 1
                        },
                        new
                        {
                            Id = 9,
                            MovieId = 3,
                            Name = "Zoe Saldana",
                            Part = 3
                        },
                        new
                        {
                            Id = 10,
                            MovieId = 6,
                            Name = "Owen Wilson",
                            Part = 1
                        });
                });

            modelBuilder.Entity("VideoMovieRent.Domain.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgeRestriction")
                        .HasColumnType("int");

                    b.Property<int>("Genre")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("Language")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Length")
                        .HasColumnType("time");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AgeRestriction = 13,
                            Genre = 5,
                            ImagePath = "/images/movie/NeonShados.jpg",
                            IsAvailable = true,
                            Language = 5,
                            Length = new TimeSpan(0, 2, 23, 0, 0),
                            Quantity = 5,
                            ReleaseDate = new DateTime(2012, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Neon Shadows"
                        },
                        new
                        {
                            Id = 2,
                            AgeRestriction = 18,
                            Genre = 3,
                            ImagePath = "/images/movie/TheSilentForest.jpg",
                            IsAvailable = true,
                            Language = 6,
                            Length = new TimeSpan(0, 2, 12, 0, 0),
                            Quantity = 3,
                            ReleaseDate = new DateTime(2019, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Silent Forest"
                        },
                        new
                        {
                            Id = 3,
                            AgeRestriction = 13,
                            Genre = 5,
                            ImagePath = "/images/movie/Paradox.jpg",
                            IsAvailable = false,
                            Language = 1,
                            Length = new TimeSpan(0, 2, 23, 0, 0),
                            Quantity = 0,
                            ReleaseDate = new DateTime(2012, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Quantum Paradox"
                        },
                        new
                        {
                            Id = 4,
                            AgeRestriction = 10,
                            Genre = 2,
                            ImagePath = "/images/movie/voyage.jpg",
                            IsAvailable = true,
                            Language = 3,
                            Length = new TimeSpan(0, 2, 49, 0, 0),
                            Quantity = 4,
                            ReleaseDate = new DateTime(2014, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Celestial Voyage"
                        },
                        new
                        {
                            Id = 5,
                            AgeRestriction = 18,
                            Genre = 4,
                            ImagePath = "/images/movie/whispers.jpg",
                            IsAvailable = true,
                            Language = 2,
                            Length = new TimeSpan(0, 2, 26, 0, 0),
                            Quantity = 2,
                            ReleaseDate = new DateTime(1980, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Whispers in the Dark"
                        },
                        new
                        {
                            Id = 6,
                            AgeRestriction = 12,
                            Genre = 6,
                            ImagePath = "/images/movie/paris.jpg",
                            IsAvailable = true,
                            Language = 3,
                            Length = new TimeSpan(0, 2, 2, 0, 0),
                            Quantity = 3,
                            ReleaseDate = new DateTime(2001, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Midnight in Paris"
                        },
                        new
                        {
                            Id = 7,
                            AgeRestriction = 13,
                            Genre = 8,
                            ImagePath = "/images/movie/letters.jpg",
                            IsAvailable = false,
                            Language = 4,
                            Length = new TimeSpan(0, 1, 56, 0, 0),
                            Quantity = 0,
                            ReleaseDate = new DateTime(1997, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Forgotten Letter"
                        },
                        new
                        {
                            Id = 8,
                            AgeRestriction = 17,
                            Genre = 4,
                            ImagePath = "/images/movie/peak.jpg",
                            IsAvailable = true,
                            Language = 1,
                            Length = new TimeSpan(0, 1, 44, 0, 0),
                            Quantity = 6,
                            ReleaseDate = new DateTime(2017, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Crimson Peak"
                        },
                        new
                        {
                            Id = 9,
                            AgeRestriction = 13,
                            Genre = 1,
                            ImagePath = "/images/movie/agent.jpg",
                            IsAvailable = true,
                            Language = 7,
                            Length = new TimeSpan(0, 2, 28, 0, 0),
                            Quantity = 7,
                            ReleaseDate = new DateTime(2010, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Rogue Agent"
                        },
                        new
                        {
                            Id = 10,
                            AgeRestriction = 15,
                            Genre = 7,
                            ImagePath = "/images/movie/daugther.jpg",
                            IsAvailable = true,
                            Language = 2,
                            Length = new TimeSpan(0, 1, 58, 0, 0),
                            Quantity = 2,
                            ReleaseDate = new DateTime(2006, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Alchemist's Daughter"
                        });
                });

            modelBuilder.Entity("VideoMovieRent.Domain.Rental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RentedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReturnedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rentals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MovieId = 1,
                            RentedOn = new DateTime(2025, 7, 15, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8187),
                            ReturnedOn = new DateTime(2025, 7, 20, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8196),
                            Title = "Neon Shadows",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            MovieId = 2,
                            RentedOn = new DateTime(2025, 7, 17, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8200),
                            ReturnedOn = new DateTime(2025, 7, 23, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8201),
                            Title = "The Silent Forest",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            MovieId = 3,
                            RentedOn = new DateTime(2025, 7, 18, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8203),
                            ReturnedOn = new DateTime(2025, 7, 24, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8205),
                            Title = "Quantum Paradox",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            MovieId = 4,
                            RentedOn = new DateTime(2025, 7, 20, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8207),
                            ReturnedOn = new DateTime(2025, 7, 25, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8208),
                            Title = "Celestial Voyage",
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            MovieId = 5,
                            RentedOn = new DateTime(2025, 7, 13, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8210),
                            ReturnedOn = new DateTime(2025, 7, 18, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8211),
                            Title = "Whispers in the Dark",
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            MovieId = 6,
                            RentedOn = new DateTime(2025, 7, 22, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8213),
                            ReturnedOn = new DateTime(2025, 7, 25, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8214),
                            Title = "Midnight in Paris",
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            MovieId = 7,
                            RentedOn = new DateTime(2025, 7, 21, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8216),
                            ReturnedOn = new DateTime(2025, 7, 24, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8217),
                            Title = "The Forgotten Letter",
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            MovieId = 8,
                            RentedOn = new DateTime(2025, 7, 23, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8219),
                            ReturnedOn = new DateTime(2025, 7, 25, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8221),
                            Title = "Crimson Peak",
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            MovieId = 9,
                            RentedOn = new DateTime(2025, 7, 19, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8222),
                            ReturnedOn = new DateTime(2025, 7, 23, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8224),
                            Title = "Rogue Agent",
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            MovieId = 10,
                            RentedOn = new DateTime(2025, 7, 24, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8226),
                            ReturnedOn = new DateTime(2025, 7, 25, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8227),
                            Title = "The Alchemist's Daughter",
                            UserId = 10
                        });
                });

            modelBuilder.Entity("VideoMovieRent.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSubscriptionExpired")
                        .HasColumnType("bit");

                    b.Property<int>("SubscriptionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 25,
                            CardNumber = "1111-2222",
                            CreatedOn = new DateTime(2025, 1, 25, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(7975),
                            FullName = "Emma Watson",
                            IsSubscriptionExpired = false,
                            SubscriptionType = 1
                        },
                        new
                        {
                            Id = 2,
                            Age = 30,
                            CardNumber = "2222-3333",
                            CreatedOn = new DateTime(2024, 11, 25, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8025),
                            FullName = "James Wilson",
                            IsSubscriptionExpired = true,
                            SubscriptionType = 2
                        },
                        new
                        {
                            Id = 3,
                            Age = 22,
                            CardNumber = "3333-4444",
                            CreatedOn = new DateTime(2024, 7, 25, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8029),
                            FullName = "Olivia Martinez",
                            IsSubscriptionExpired = false,
                            SubscriptionType = 1
                        },
                        new
                        {
                            Id = 4,
                            Age = 28,
                            CardNumber = "4444-5555",
                            CreatedOn = new DateTime(2025, 4, 25, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8032),
                            FullName = "Liam Anderson",
                            IsSubscriptionExpired = false,
                            SubscriptionType = 2
                        },
                        new
                        {
                            Id = 5,
                            Age = 35,
                            CardNumber = "5555-6666",
                            CreatedOn = new DateTime(2023, 7, 25, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8034),
                            FullName = "Sophia Garcia",
                            IsSubscriptionExpired = true,
                            SubscriptionType = 1
                        },
                        new
                        {
                            Id = 6,
                            Age = 40,
                            CardNumber = "6666-7777",
                            CreatedOn = new DateTime(2024, 9, 25, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8037),
                            FullName = "Noah Taylor",
                            IsSubscriptionExpired = false,
                            SubscriptionType = 2
                        },
                        new
                        {
                            Id = 7,
                            Age = 29,
                            CardNumber = "7777-8888",
                            CreatedOn = new DateTime(2025, 2, 25, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8039),
                            FullName = "Ava Lopez",
                            IsSubscriptionExpired = false,
                            SubscriptionType = 1
                        },
                        new
                        {
                            Id = 8,
                            Age = 33,
                            CardNumber = "8888-9999",
                            CreatedOn = new DateTime(2025, 6, 25, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8041),
                            FullName = "William Hernandez",
                            IsSubscriptionExpired = true,
                            SubscriptionType = 2
                        },
                        new
                        {
                            Id = 9,
                            Age = 21,
                            CardNumber = "9999-0000",
                            CreatedOn = new DateTime(2024, 12, 25, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8045),
                            FullName = "Mia Gonzalez",
                            IsSubscriptionExpired = false,
                            SubscriptionType = 1
                        },
                        new
                        {
                            Id = 10,
                            Age = 27,
                            CardNumber = "0000-1111",
                            CreatedOn = new DateTime(2025, 3, 25, 18, 5, 37, 849, DateTimeKind.Local).AddTicks(8047),
                            FullName = "Benjamin Clark",
                            IsSubscriptionExpired = true,
                            SubscriptionType = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
